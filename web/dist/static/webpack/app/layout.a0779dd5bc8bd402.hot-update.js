"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/utils/tocModels.js":
/*!************************************!*\
  !*** ./src/app/utils/tocModels.js ***!
  \************************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_LISTS: function() { return /* binding */ DEFAULT_LISTS; },\n/* harmony export */   EDGE_STYLES: function() { return /* binding */ EDGE_STYLES; },\n/* harmony export */   EDGE_TYPES: function() { return /* binding */ EDGE_TYPES; },\n/* harmony export */   LIST_TYPES: function() { return /* binding */ LIST_TYPES; },\n/* harmony export */   NODE_TYPES: function() { return /* binding */ NODE_TYPES; },\n/* harmony export */   createBoard: function() { return /* binding */ createBoard; },\n/* harmony export */   createEdge: function() { return /* binding */ createEdge; },\n/* harmony export */   createList: function() { return /* binding */ createList; },\n/* harmony export */   createNode: function() { return /* binding */ createNode; }\n/* harmony export */ });\n/**\n * Theory of Change data models and types\n */ // Default list types for Theory of Change\nconst DEFAULT_LISTS = [\n    {\n        id: \"activities\",\n        name: \"Activities\",\n        color: \"#3b82f6\",\n        order: 0,\n        type: \"fixed\"\n    },\n    {\n        id: \"outputs\",\n        name: \"Outputs\",\n        color: \"#10b981\",\n        order: 1,\n        type: \"fixed\"\n    },\n    {\n        id: \"intermediate-1\",\n        name: \"Intermediate Outcomes 1\",\n        color: \"#f59e0b\",\n        order: 2,\n        type: \"intermediate\"\n    },\n    {\n        id: \"final-outcomes\",\n        name: \"Final Outcomes\",\n        color: \"#ef4444\",\n        order: 3,\n        type: \"fixed\"\n    },\n    {\n        id: \"impact\",\n        name: \"Impact\",\n        color: \"#8b5cf6\",\n        order: 4,\n        type: \"fixed\"\n    }\n];\n// List types\nconst LIST_TYPES = {\n    FIXED: \"fixed\",\n    INTERMEDIATE: \"intermediate\"\n};\n// Node types\nconst NODE_TYPES = {\n    ACTIVITY: \"activity\",\n    OUTPUT: \"output\",\n    INTERMEDIATE_OUTCOME: \"intermediate_outcome\",\n    FINAL_OUTCOME: \"final_outcome\",\n    IMPACT: \"impact\"\n};\n// Edge types\nconst EDGE_TYPES = {\n    LEADS_TO: \"leads_to\",\n    ENABLES: \"enables\",\n    REQUIRES: \"requires\",\n    CONTRIBUTES_TO: \"contributes_to\"\n};\n// Default edge styles\nconst EDGE_STYLES = {\n    [EDGE_TYPES.LEADS_TO]: {\n        stroke: \"#1355bfff\",\n        strokeWidth: 2,\n        style: \"solid\",\n        label: \"leads to\"\n    },\n    [EDGE_TYPES.ENABLES]: {\n        stroke: \"#10b981\",\n        strokeWidth: 2,\n        style: \"dashed\",\n        label: \"enables\"\n    },\n    [EDGE_TYPES.REQUIRES]: {\n        stroke: \"#ef4444\",\n        strokeWidth: 2,\n        style: \"dotted\",\n        label: \"requires\"\n    },\n    [EDGE_TYPES.CONTRIBUTES_TO]: {\n        stroke: \"#f59e0b\",\n        strokeWidth: 2,\n        style: \"solid\",\n        label: \"contributes to\"\n    }\n};\n/**\n * Create a new board\n */ function createBoard() {\n    let name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"Theory of Change Board\";\n    const boardId = generateId();\n    // Create lists with proper IDs\n    const lists = DEFAULT_LISTS.map((list)=>({\n            ...list,\n            id: list.id,\n            nodeIds: []\n        }));\n    // Create sample nodes - 100+ nodes with variety\n    const sampleNodes = [\n        // Activities (30 nodes)\n        createNode(\"Community Training Workshops\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Teacher Professional Development Program\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Digital Learning Platform Development\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Curriculum Design and Review\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Parent Engagement Sessions\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"School Infrastructure Improvement\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Educational Technology Integration\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Student Mentorship Program\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"After-School Support Programs\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Reading Enhancement Workshops\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"STEM Education Initiatives\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Arts and Culture Programs\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Sports and Physical Education\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Nutrition and Health Education\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Library Resource Development\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Computer Lab Setup\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Science Equipment Procurement\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Teacher Coaching and Feedback\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Classroom Management Training\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Assessment Development\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Learning Materials Creation\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Community Outreach Programs\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"School Leadership Training\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Data Collection Systems\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Quality Assurance Processes\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Peer Learning Networks\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Special Needs Support\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Career Guidance Sessions\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Environmental Education\", \"activities\", NODE_TYPES.ACTIVITY),\n        createNode(\"Financial Literacy Programs\", \"activities\", NODE_TYPES.ACTIVITY),\n        // Outputs (25 nodes)\n        createNode(\"500 Teachers Trained\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Online Learning Platform Launched\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Updated Curriculum Materials\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Community Learning Centers Established\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"10 Schools Renovated\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"5000 Students Enrolled\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"200 Computers Deployed\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"50 Science Kits Distributed\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"1000 Parents Engaged\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"100 Mentors Recruited\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"New Library with 5000 Books\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Digital Content Created\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Assessment System Implemented\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Teacher Resource Portal\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Student Progress Tracking System\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Parent Communication App\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"School Safety Protocols\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Nutrition Programs Running\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Sports Facilities Built\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Art Studios Equipped\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Special Education Resources\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Career Center Established\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Environmental Projects Launched\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Student Clubs Formed\", \"outputs\", NODE_TYPES.OUTPUT),\n        createNode(\"Community Partnerships Formed\", \"outputs\", NODE_TYPES.OUTPUT),\n        // Intermediate Outcomes (30 nodes)\n        createNode(\"Improved Teaching Quality\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Increased Student Engagement\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Digital Literacy\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Learning Environment\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Stronger Parent Involvement\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Higher Student Attendance\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Improved Reading Skills\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Math Competency\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Science Understanding\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Increased Critical Thinking\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Collaboration Skills\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Creativity\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Improved Physical Health\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Mental Wellbeing\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Stronger Community Ties\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Increased Confidence\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Problem-Solving\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Communication Skills\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Improved Time Management\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Greater Motivation\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Career Awareness\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Social Skills\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Improved Behavior\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Greater Inclusivity\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Resource Access\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Increased Technology Use\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Enhanced Leadership Skills\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Better Environmental Awareness\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Improved Financial Literacy\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        createNode(\"Greater Cultural Appreciation\", \"intermediate-1\", NODE_TYPES.INTERMEDIATE_OUTCOME),\n        // Final Outcomes (20 nodes)\n        createNode(\"Improved Student Learning Outcomes\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Reduced Educational Inequality\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Increased School Completion Rates\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Higher University Enrollment\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Better Employment Opportunities\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Increased Literacy Rates\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Enhanced Numeracy Skills\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Reduced Dropout Rates\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Improved Test Scores\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Greater Gender Equality\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Better Health Outcomes\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Increased Innovation\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Stronger Civic Engagement\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Enhanced Social Mobility\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Better Life Skills\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Increased Entrepreneurship\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Greater Community Leadership\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Improved Quality of Life\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Better Decision Making\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        createNode(\"Increased Resilience\", \"final-outcomes\", NODE_TYPES.FINAL_OUTCOME),\n        // Impact (10 nodes)\n        createNode(\"Sustainable Community Development\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Reduced Poverty in Target Communities\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Economic Growth\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Social Cohesion\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Environmental Sustainability\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Improved Public Health\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Democratic Participation\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Cultural Preservation\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Innovation Economy\", \"impact\", NODE_TYPES.IMPACT),\n        createNode(\"Intergenerational Equity\", \"impact\", NODE_TYPES.IMPACT)\n    ];\n    // Set proper order for nodes within each list\n    sampleNodes.forEach((node, index)=>{\n        const listNodes = sampleNodes.filter((n)=>n.listId === node.listId);\n        const nodeIndexInList = listNodes.findIndex((n)=>n.id === node.id);\n        node.order = nodeIndexInList;\n        node.description = getNodeDescription(node.title, node.type);\n    });\n    // Create many sample edges with variety (50+ edges with different types)\n    const sampleEdges = [\n        // Activities -> Outputs (LEADS_TO)\n        createEdge(sampleNodes[0].id, sampleNodes[30].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[1].id, sampleNodes[30].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[2].id, sampleNodes[31].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[3].id, sampleNodes[32].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[4].id, sampleNodes[38].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[5].id, sampleNodes[34].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[6].id, sampleNodes[36].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[7].id, sampleNodes[39].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[8].id, sampleNodes[35].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[9].id, sampleNodes[40].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[10].id, sampleNodes[37].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[11].id, sampleNodes[49].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[12].id, sampleNodes[48].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[13].id, sampleNodes[47].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[14].id, sampleNodes[40].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[15].id, sampleNodes[36].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[16].id, sampleNodes[37].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[17].id, sampleNodes[30].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[18].id, sampleNodes[30].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[19].id, sampleNodes[42].id, EDGE_TYPES.LEADS_TO),\n        // Outputs -> Intermediate Outcomes (LEADS_TO & ENABLES)\n        createEdge(sampleNodes[30].id, sampleNodes[55].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[31].id, sampleNodes[57].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[32].id, sampleNodes[55].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[33].id, sampleNodes[58].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[34].id, sampleNodes[58].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[35].id, sampleNodes[56].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[36].id, sampleNodes[57].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[37].id, sampleNodes[63].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[38].id, sampleNodes[59].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[39].id, sampleNodes[56].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[40].id, sampleNodes[61].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[41].id, sampleNodes[57].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[42].id, sampleNodes[55].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[43].id, sampleNodes[55].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[44].id, sampleNodes[60].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[45].id, sampleNodes[59].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[46].id, sampleNodes[58].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[47].id, sampleNodes[67].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[48].id, sampleNodes[67].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[49].id, sampleNodes[66].id, EDGE_TYPES.LEADS_TO),\n        // Intermediate Outcomes -> Intermediate Outcomes (CONTRIBUTES_TO & ENABLES)\n        createEdge(sampleNodes[55].id, sampleNodes[56].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[56].id, sampleNodes[60].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[57].id, sampleNodes[64].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[58].id, sampleNodes[60].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[59].id, sampleNodes[60].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[61].id, sampleNodes[64].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[62].id, sampleNodes[66].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[63].id, sampleNodes[64].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[64].id, sampleNodes[71].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[65].id, sampleNodes[77].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[66].id, sampleNodes[70].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[67].id, sampleNodes[68].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[68].id, sampleNodes[74].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[69].id, sampleNodes[77].id, EDGE_TYPES.ENABLES),\n        // Intermediate Outcomes -> Final Outcomes (LEADS_TO & CONTRIBUTES_TO)\n        createEdge(sampleNodes[55].id, sampleNodes[85].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[56].id, sampleNodes[85].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[57].id, sampleNodes[85].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[60].id, sampleNodes[87].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[61].id, sampleNodes[91].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[62].id, sampleNodes[92].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[64].id, sampleNodes[85].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[67].id, sampleNodes[95].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[68].id, sampleNodes[95].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[70].id, sampleNodes[99].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[71].id, sampleNodes[103].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[72].id, sampleNodes[99].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[74].id, sampleNodes[93].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[75].id, sampleNodes[89].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[77].id, sampleNodes[98].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[80].id, sampleNodes[81].id, EDGE_TYPES.ENABLES),\n        // Final Outcomes -> Impact (LEADS_TO & CONTRIBUTES_TO)\n        createEdge(sampleNodes[85].id, sampleNodes[105].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[86].id, sampleNodes[106].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[87].id, sampleNodes[105].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[88].id, sampleNodes[113].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[89].id, sampleNodes[107].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[91].id, sampleNodes[106].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[92].id, sampleNodes[106].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[93].id, sampleNodes[105].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[94].id, sampleNodes[90].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[95].id, sampleNodes[110].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[96].id, sampleNodes[113].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[97].id, sampleNodes[111].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[98].id, sampleNodes[108].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[99].id, sampleNodes[105].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[100].id, sampleNodes[107].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[101].id, sampleNodes[108].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[102].id, sampleNodes[105].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[103].id, sampleNodes[111].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[104].id, sampleNodes[114].id, EDGE_TYPES.CONTRIBUTES_TO),\n        // Additional forward-flowing edges for more variety\n        createEdge(sampleNodes[20].id, sampleNodes[41].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[21].id, sampleNodes[44].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[22].id, sampleNodes[43].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[23].id, sampleNodes[50].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[24].id, sampleNodes[51].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[25].id, sampleNodes[52].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[26].id, sampleNodes[53].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[27].id, sampleNodes[54].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[28].id, sampleNodes[45].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[29].id, sampleNodes[46].id, EDGE_TYPES.LEADS_TO),\n        // More Outputs -> Intermediate Outcomes\n        createEdge(sampleNodes[50].id, sampleNodes[72].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[51].id, sampleNodes[56].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[52].id, sampleNodes[62].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[53].id, sampleNodes[63].id, EDGE_TYPES.ENABLES),\n        createEdge(sampleNodes[54].id, sampleNodes[65].id, EDGE_TYPES.LEADS_TO),\n        // More Intermediate -> Final Outcomes\n        createEdge(sampleNodes[73].id, sampleNodes[102].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[76].id, sampleNodes[100].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[78].id, sampleNodes[96].id, EDGE_TYPES.CONTRIBUTES_TO),\n        createEdge(sampleNodes[79].id, sampleNodes[109].id, EDGE_TYPES.LEADS_TO),\n        createEdge(sampleNodes[81].id, sampleNodes[101].id, EDGE_TYPES.CONTRIBUTES_TO)\n    ];\n    return {\n        id: boardId,\n        name,\n        description: \"A sample Theory of Change for education improvement\",\n        lists,\n        nodes: sampleNodes,\n        edges: sampleEdges,\n        settings: {\n            showLabels: true,\n            snapToGrid: false,\n            autoLayout: true,\n            theme: \"light\"\n        },\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n}\n/**\n * Get sample description for a node based on its type\n */ function getNodeDescription(title, type) {\n    const descriptions = {\n        [NODE_TYPES.ACTIVITY]: \"Key activity to implement the program\",\n        [NODE_TYPES.OUTPUT]: \"Direct result of program activities\",\n        [NODE_TYPES.INTERMEDIATE_OUTCOME]: \"Medium-term change resulting from outputs\",\n        [NODE_TYPES.FINAL_OUTCOME]: \"Long-term change we aim to achieve\",\n        [NODE_TYPES.IMPACT]: \"Ultimate societal change we contribute to\"\n    };\n    return descriptions[type] || \"Description for this node\";\n}\n/**\n * Create a new list\n */ function createList(name) {\n    let color = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"#6b7280\", order = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, type = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"intermediate\";\n    return {\n        id: generateId(),\n        name,\n        color,\n        order,\n        type,\n        collapsed: false,\n        nodeIds: []\n    };\n}\n/**\n * Create a new node\n */ function createNode(title, listId) {\n    let type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : NODE_TYPES.ACTIVITY;\n    return {\n        id: generateId(),\n        title,\n        description: \"\",\n        listId,\n        type,\n        tags: [],\n        color: \"\",\n        priority: \"medium\",\n        order: 0,\n        position: {\n            x: 0,\n            y: 0\n        },\n        size: {\n            width: 200,\n            height: 100\n        },\n        collapsed: false,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n}\n/**\n * Create a new edge\n */ function createEdge(sourceId, targetId) {\n    let type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EDGE_TYPES.LEADS_TO;\n    return {\n        id: generateId(),\n        sourceId,\n        targetId,\n        type,\n        label: EDGE_STYLES[type].label,\n        style: EDGE_STYLES[type],\n        animated: false,\n        createdAt: new Date().toISOString()\n    };\n}\n/**\n * Generate a unique ID\n */ function generateId() {\n    return Math.random().toString(36).substr(2, 9);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/utils/tocModels.js\n"));

/***/ })

});